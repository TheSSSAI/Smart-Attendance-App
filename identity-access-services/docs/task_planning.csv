"task_id","title","description","type","status","priority","assignee","reporter","due_date","estimated_hours","story_points","labels","sprint","sprint_goal","epic","epic_id","project","parent_id","dependencies","skills_required","complexity","risk_level","acceptance_criteria","definition_of_done","created_at","updated_at","sprint_start_date","sprint_end_date","capacity_allocation","collaboration_required","external_dependencies","testing_requirements","deployment_notes","business_value"
"TASK-101-01","Provision & Configure 3 Firebase/GCP Projects","Manually create and configure the dev, staging, and prod Firebase projects. Enable Firestore, Auth, Functions, Storage, and Hosting APIs. Link to a billing account and document project IDs.","Task","Sprint Backlog","Critical","devops.engineer@company.com","project.manager@company.com","2024-10-25","6.33","5","gcp,firebase,infrastructure","Sprint 1","Establish Foundational Infrastructure & CI/CD Pipelines.","Platform Foundation & CI/CD","EPIC-001","Attendance Tracking App","US-101","","GCP,Firebase","Medium","Medium","Three Firebase projects exist with required APIs and billing enabled.","Projects provisioned; IDs documented; APIs enabled.","2024-10-15T09:00:00Z","2024-10-15T09:00:00Z","2024-10-21","2024-11-01","100%","","GCP Account Access","Manual verification in GCP console.","N/A","Enables environment isolation for stable development lifecycle."
"TASK-102-01","Configure GCP Workload Identity Federation","In each of the three GCP projects, create a Workload Identity Pool and a Provider configured for GitHub. Create a dedicated service account for GitHub Actions deployments and grant it the necessary IAM roles.","Task","Sprint Backlog","Critical","devops.engineer@company.com","project.manager@company.com","2024-10-28","8.67","8","gcp,iam,security,cicd","Sprint 1","Establish Foundational Infrastructure & CI/CD Pipelines.","Platform Foundation & CI/CD","EPIC-001","Attendance Tracking App","US-102","TASK-101-01","GCP,IAM,Security","High","High","Workload Identity Pool and Provider for GitHub exists in each GCP project; CI/CD service account exists with appropriate roles.","WIF configured; Service accounts created; Permissions granted.","2024-10-15T09:00:00Z","2024-10-15T09:00:00Z","2024-10-21","2024-11-01","100%","","","Verification via a test GitHub Actions workflow.","Requires careful IAM configuration.","Enhances security of the deployment pipeline by eliminating long-lived keys."
"TASK-103-03","Implement Deploy Job for Backend","Implement the 'deploy' job in the CI/CD workflow, which depends on 'build-and-test'. This job will authenticate to GCP using WIF, set the correct Firebase project alias, and run `firebase deploy`.","Task","Sprint Backlog","Critical","devops.engineer@company.com","project.manager@company.com","2024-11-01","8.67","8","cicd,github-actions,firebase,deployment","Sprint 1","Establish Foundational Infrastructure & CI/CD Pipelines.","Platform Foundation & CI/CD","EPIC-001","Attendance Tracking App","US-103","TASK-103-02","GitHub Actions,YAML,Firebase CLI","Medium","Medium","The job correctly authenticates to the target GCP project; `firebase deploy` command is executed successfully; a push to 'develop' results in visible changes in the Staging project.","Deploy job implemented in YAML; Successful deployment to staging verified.","2024-10-15T09:00:00Z","2024-10-15T09:00:00Z","2024-10-21","2024-11-01","100%","","","Verification of deployed resources in Firebase Console.","Environment-specific logic is critical.","Automates release process, increases deployment frequency, and reduces manual errors."
"TASK-001-03","Implement `registerOrganization` Callable Cloud Function","Create a TypeScript callable function that atomically creates all necessary records: 1) Creates Firebase Auth user. 2) Creates a `/tenants/{tenantId}` document. 3) Creates a `/users/{userId}` document for the admin. 4) Sets `tenantId` and `role: 'Admin'` custom claims on the Auth user. Implement compensation logic to delete the Auth user if any Firestore write fails.","Task","Sprint Backlog","Critical","backend.dev1@company.com","product.owner@company.com","2024-11-12","16.67","8","backend,typescript,firebase-functions,auth","Sprint 2","Implement Core User Onboarding & Authentication.","Tenant & User Lifecycle Management","EPIC-002","Attendance Tracking App","US-001","TASK-001-02","TypeScript,Firebase Auth,Firestore","High","High","Valid request results in creation of all required records/claims; Failure during Firestore write results in deletion of Auth user.","Function code complete; Unit tests cover success and rollback paths; Integration tested via emulator.","2024-10-15T09:00:00Z","2024-10-15T09:00:00Z","2024-11-04","2024-11-15","100%","frontend.dev1@company.com for API contract","","Exhaustive unit tests for rollback logic.","Requires deployment via the new CI/CD pipeline.","Enables self-service onboarding for new organizations."
"TASK-004-02","Implement `inviteUser` Callable Cloud Function","Create a TypeScript function that: verifies the caller is an Admin; checks if the email already exists in the tenant; creates a new user document in Firestore with 'invited' status and the assigned role; generates a unique, 24-hour registration token; and stores it in the user document.","Task","Sprint Backlog","Critical","backend.dev2@company.com","product.owner@company.com","2024-11-26","10.33","5","backend,typescript,user-management","Sprint 3","Enable Multi-User Organizations & Team Structure.","Tenant & User Lifecycle Management","EPIC-002","Attendance Tracking App","US-004","TASK-001-03","TypeScript,Firestore","Medium","Medium","User document with 'invited' status is created; rejects non-Admins and duplicate emails.","Function code complete and unit tested; Deployed and verified via emulator.","2024-10-15T09:00:00Z","2024-10-15T09:00:00Z","2024-11-18","2024-11-29","100%","frontend.dev1@company.com","","Unit tests for admin validation and duplicate checks.","","Allows organizations to grow by adding new employees to the system."
"TASK-040-CAW-CHECKIN","Implement Check-In Logic and Offline Caching","Implement the logic for the 'Check-In' action. This includes capturing GPS and timestamp, creating an attendance record object, and writing it to Firestore. Ensure this works seamlessly offline by leveraging Firestore's offline persistence, flagging the record as `isOfflineEntry: true`.","Task","Sprint Backlog","Critical","frontend.dev1@company.com","product.owner@company.com","2024-12-10","5","5","frontend,flutter,mobile,offline,attendance","Sprint 4","Deliver Core Attendance Value: The First 'Punch'.","Core Attendance Workflow","EPIC-004","Attendance Tracking App","US-028","TASK-039-CAW-LOCATION","Flutter,Dart,Firestore,Riverpod","Medium","Medium","Tapping check-in creates a 'pending' record in Firestore (or local cache if offline); Offline records have `isOfflineEntry: true` flag.","Check-in logic implemented; Offline functionality tested in airplane mode; Data syncs upon reconnection.","2024-10-15T09:00:00Z","2024-10-15T09:00:00Z","2024-12-02","2024-12-13","100%","backend.dev1@company.com for security rules","","E2E testing with network toggling.","","Provides the foundational data point for all attendance tracking."
"TASK-049-ACW-LIST-UI","Implement Supervisor's Pending Approvals UI","Create the Supervisor's main dashboard screen in the mobile app. This screen will display a real-time list of 'pending' attendance records from their direct subordinates. Each list item must show the subordinate's name, date, and times.","Task","Sprint Backlog","Critical","frontend.dev2@company.com","product.owner@company.com","2024-12-24","5","5","frontend,flutter,mobile,supervisor","Sprint 5","Enable Supervisor Workflow: See and Act on Data.","Approval & Correction Workflow","EPIC-005","Attendance Tracking App","US-037","TASK-040-CAW-CHECKIN","Flutter,Dart,Firestore,Riverpod","Medium","Medium","Supervisor dashboard displays a real-time list of pending records only from direct subordinates; List is empty with a message if no records are pending.","UI screen implemented; Real-time Firestore query is functional; Security rules are verified to scope data correctly.","2024-10-15T09:00:00Z","2024-10-15T09:00:00Z","2024-12-16","2024-12-27","100%","backend.dev1@company.com","","Integration test with multiple supervisors and teams.","","Enables the core attendance approval workflow."