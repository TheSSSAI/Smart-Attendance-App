"story_id","epic","title","user_role","description","business_value","priority","story_points","dependencies","acceptance_criteria","technical_tasks","definition_of_done"
"US-101","Platform Foundation & CI/CD","Establish Multi-Environment Cloud Infrastructure","DevOps Engineer","As a DevOps Engineer, I want to provision three separate and isolated Google Firebase/GCP projects for Development, Staging, and Production, so that we can maintain a stable and secure development lifecycle.","Ensures code and data isolation between environments, reducing the risk of production incidents and enabling parallel development and testing activities.","Must Have","5","[]","[{""scenario"":""Provisioning all three environments"",""given"":""I have the necessary permissions in Google Cloud Platform"",""when"":""I create the three Firebase projects with consistent naming (e.g., 'attendance-app-dev', 'attendance-app-staging', 'attendance-app-prod')"",""then"":""three distinct Firebase projects exist, each linked to a GCP billing account, with the necessary APIs (Firestore, Auth, Functions) enabled.""}]","[""WI-001-PF-SETUP""]","[""Three Firebase projects are created and configured."",""Billing is enabled on all projects."",""Required APIs are enabled."",""Project IDs are documented for CI/CD configuration.""]"
"US-102","Platform Foundation & CI/CD","Set Up Secure CI/CD Authentication to GCP","DevOps Engineer","As a DevOps Engineer, I want to configure Workload Identity Federation between GitHub Actions and GCP, so that our CI/CD pipelines can authenticate securely without using long-lived service account keys.","Enhances the security of the deployment pipeline by adhering to the principle of least privilege and using short-lived credentials, reducing the risk of compromised keys.","Must Have","8","[""US-101""]","[{""scenario"":""Pipeline authenticates successfully"",""given"":""a Workload Identity Pool and Provider are configured in GCP"",""when"":""a GitHub Actions workflow attempts to authenticate to GCP"",""then"":""the workflow successfully obtains a short-lived access token and can interact with GCP resources.""}]","[""WI-006-PF-GHA-AUTH""]","[""Workload Identity Federation is configured in GCP."",""A GitHub Actions workflow successfully authenticates to the staging GCP project."",""Configuration is documented for other developers.""]"
"US-103","Platform Foundation & CI/CD","Automate Backend Deployments","Developer","As a Developer, I want a CI/CD pipeline that automatically lints, tests, and deploys the Firebase backend (Functions, Rules, Indexes) when I push to 'develop' or 'main', so that I can ensure consistent and reliable deployments to Staging and Production.","Automates the release process, increases deployment frequency, reduces manual errors, and enforces quality gates (linting, testing) for all backend changes.","Must Have","8","[""US-101"",""US-102""]","[{""scenario"":""Deployment to Staging"",""given"":""a developer pushes a commit to the 'develop' branch"",""when"":""the GitHub Actions workflow for the backend is triggered"",""then"":""the workflow runs linter, executes all unit tests, and on success, deploys all Firebase resources to the Staging project.""},{""scenario"":""Deployment to Production"",""given"":""a pull request is merged into the 'main' branch"",""when"":""the GitHub Actions workflow for the backend is triggered"",""then"":""the workflow deploys all Firebase resources to the Production project.""},{""scenario"":""Pipeline fails on test failure"",""given"":""a developer pushes a commit with failing unit tests"",""when"":""the GitHub Actions workflow runs"",""then"":""the workflow fails at the test step and does not proceed to deployment.""}]","[""WI-007-PF-GHA-BACKEND""]","[""GitHub Actions workflow for backend deployment is created and functional."",""A push to 'develop' successfully deploys to Staging."",""A push to 'main' successfully deploys to Production."",""The build fails if tests or linting checks fail.""]"
"US-104","Platform Foundation & CI/CD","Set Up Automated Firestore Backups and DR Plan","DevOps Engineer","As a DevOps Engineer, I want to configure daily automated backups of the Firestore database and document a disaster recovery plan, so that we can meet our RPO of 24 hours and RTO of 4 hours, ensuring business continuity.","Protects against catastrophic data loss, ensures compliance with business continuity requirements, and provides a clear, tested plan for service restoration in case of a disaster.","Must Have","5","[""US-101""]","[{""scenario"":""Automated backup configuration"",""given"":""the Production Firebase project is provisioned"",""when"":""I configure the GCP managed export service for Firestore"",""then"":""a daily backup of the entire Firestore database is successfully written to a designated Google Cloud Storage bucket.""},{""scenario"":""Disaster Recovery plan validation"",""given"":""a documented disaster recovery procedure exists"",""when"":""a test restoration drill is performed in the Staging environment"",""then"":""the service is restored from a backup within the 4-hour RTO target.""}]","[""WI-013-PF-DR"",""WI-014-PF-DR-DOC""]","[""Automated daily Firestore export is active and verified."",""A step-by-step DR procedure document is written."",""A restoration drill has been successfully completed and timed in a non-production environment.""]"
"US-001","Tenant & User Lifecycle Management","Admin registers a new organization tenant","New Admin","As a new administrator, I want to register my organization by providing my details and a unique organization name, so that a new, isolated tenant is created for my company and I can begin configuring the system.","Enables new organizations to self-onboard, creating the foundational tenant structure. This is the primary entry point for customer acquisition and is critical for the multi-tenant architecture.","Must Have","8","[""US-101"",""US-103""]","[{""scenario"":""Successful registration with unique organization name"",""given"":""a potential administrator is on the registration page with a unique organization name"",""when"":""the user clicks the 'Register' button"",""then"":""a new tenant document is created, a new user is created in Firebase Auth with the 'Admin' role and correct custom claims, the user is logged in, and they are redirected to the Admin dashboard.""},{""scenario"":""Registration attempt with a duplicate organization name"",""given"":""an organization with the name 'Global Tech Inc.' already exists"",""when"":""a user enters 'global tech inc.' as the organization name and submits"",""then"":""the form submission is blocked and an error message 'Organization name is already taken' is displayed.""},{""scenario"":""Registration process is atomic"",""given"":""a user submits a valid registration form"",""when"":""an unexpected error occurs during user document creation after the Auth user is created"",""then"":""the entire transaction is rolled back, the Auth user is deleted, and the user is shown a generic error message.""}]","[""WI-015-TUL-REG-UI"",""WI-016-TUL-REG-FUNC"",""WI-017-TUL-UNIQUE-FUNC""]","[""Admin registration web page is functional."",""Backend Cloud Function for registration is deployed and tested."",""Successful registration creates all required data atomically."",""Custom claims (`tenantId`, `role`) are correctly set on the user's token.""]"
"US-004","Tenant & User Lifecycle Management","Admin invites a new user to the organization via email","Admin","As an Admin, I want to invite new employees by entering their email address and assigning a role, so that they can receive a secure registration link and create their account within my organization's tenant.","Enables the onboarding of new employees, facilitating organizational growth. Ensures only authorized individuals can join a specific tenant, maintaining data security and isolation.","Must Have","5","[""US-001""]","[{""scenario"":""Successful invitation of a new user"",""given"":""I am an Admin on the 'Manage Users' page"",""when"":""I enter a valid email 'new.user@example.com', select the role 'Subordinate', and click 'Send Invitation'"",""then"":""a user document is created in Firestore with status 'invited', and a success notification is displayed.""},{""scenario"":""Attempting to invite an existing user"",""given"":""a user with the email 'existing.user@example.com' already exists in my tenant"",""when"":""I attempt to invite them again"",""then"":""the submission is blocked and an error message 'A user with this email already exists' is displayed.""}]","[""WI-018-TUL-INV-UI"",""WI-019-TUL-INV-FUNC""]","[""Invite User UI is functional in the Admin dashboard."",""Backend Cloud Function creates the 'invited' user document and triggers an email."",""New user appears in the user list with 'Invited' status.""]"
"US-005","Tenant & User Lifecycle Management","Invited user receives an email with a time-limited registration link","Invited User","As an invited user, I want to receive an email containing a unique, time-limited registration link, so that I can securely begin the process of creating my account.","Provides a secure and automated mechanism for new user activation. Reinforces a professional onboarding experience.","Must Have","5","[""US-004""]","[{""scenario"":""Successful email delivery"",""given"":""an Admin has sent an invitation to 'new.user@example.com'"",""when"":""the backend system processes the invitation"",""then"":""an email is sent to 'new.user@example.com' containing a unique registration link and a message stating the link expires in 24 hours.""},{""scenario"":""Email hard bounce handling"",""given"":""an invitation is sent to a non-existent email address"",""when"":""the email service reports a hard bounce"",""then"":""the invited user's profile in Firestore is updated with a status like 'delivery_failed', which is visible to the Admin.""}]","[""WI-019-TUL-INV-FUNC""]","[""HTML email template is created and tested."",""Cloud Function successfully integrates with SendGrid to send the email."",""Email contains a correctly formatted, unique registration link.""]"
"US-006","Tenant & User Lifecycle Management","Invited user completes registration by setting a password","Invited User","As an Invited User, I want to securely complete my account registration by clicking a unique link from my invitation email and setting a strong password, so that I can activate my account and log in.","Enables the final, critical step of user onboarding, converting an invited user into an active user.","Must Have","5","[""US-005"",""US-027""]","[{""scenario"":""Successful account activation"",""given"":""I have a valid, non-expired registration link"",""when"":""I enter a password that meets the policy, confirm it, and click 'Activate Account'"",""then"":""my user status is updated to 'active', I am automatically logged in, and I am redirected to my role-specific dashboard.""},{""scenario"":""Attempting to use an expired link"",""given"":""I have a registration link that is older than 24 hours"",""when"":""I click the link"",""then"":""I am redirected to a page that states 'This invitation link has expired. Please contact your administrator.'""}]","[""WI-020-TUL-REG-COMPLETE-UI"",""WI-021-TUL-REG-COMPLETE-FUNC"",""WI-022-TUL-EXPIRED-UI""]","[""Registration completion page is functional."",""Backend Cloud Function correctly validates the token and activates the user."",""Token is invalidated after use."",""Expired and invalid link scenarios are handled gracefully.""]"
"US-008","Tenant & User Lifecycle Management","Admin deactivates a user's account","Admin","As an Admin, I want to deactivate a user's account, so that I can securely revoke access for departing employees.","Enhances organizational security by preventing unauthorized access from former employees.","Must Have","5","[""US-004"",""US-010"",""US-009""]","[{""scenario"":""Admin successfully deactivates a user"",""given"":""I am an Admin on the user management dashboard"",""when"":""I select a user and click 'Deactivate'"",""then"":""the user's status is updated to 'deactivated', their active sessions are invalidated, and an audit log entry is created for the action.""},{""scenario"":""Admin cannot deactivate their own account"",""given"":""I am an Admin on the user management dashboard"",""when"":""I locate my own user account in the list"",""then"":""the 'Deactivate' action is disabled or hidden.""}]","[""WI-023-TUL-DEACTIVATE-UI"",""WI-024-TUL-DEACTIVATE-FUNC""]","[""Deactivation UI is functional."",""Backend function updates user status, revokes auth tokens, and creates an audit log."",""UI prevents self-deactivation."",""Deactivated user is prevented from logging in.""]"
"US-009","Tenant & User Lifecycle Management","Admin is required to reassign subordinates before deactivating a Supervisor","Admin","As an Admin, I want to be prevented from deactivating a Supervisor who still has active subordinates and be prompted to reassign them first, so that every employee remains managed and workflows are not broken.","Ensures organizational hierarchy integrity by preventing 'orphaned' employees, maintaining the continuity of approval workflows.","Must Have","5","[""US-008""]","[{""scenario"":""Attempt to deactivate a Supervisor with active subordinates"",""given"":""an Admin attempts to deactivate a Supervisor with one or more active subordinates"",""when"":""the deactivation action is triggered"",""then"":""the action is blocked and a modal appears showing the list of subordinates who must be reassigned.""},{""scenario"":""Successful deactivation after reassignment"",""given"":""an Admin was blocked from deactivating a Supervisor"",""when"":""the Admin reassigns all subordinates to a new Supervisor and retries the deactivation"",""then"":""the deactivation action is successful, and the former Supervisor's status is updated to 'deactivated'.""}]","[""WI-023-TUL-DEACTIVATE-UI"",""WI-024-TUL-DEACTIVATE-FUNC""]","[""Backend function correctly checks for subordinates before deactivation."",""UI presents the reassignment modal when the block occurs."",""Reassignment is completed successfully, allowing the original deactivation to proceed.""]"
"US-022","Tenant & User Lifecycle Management","Admin initiates the permanent deletion of their organization's tenant","Admin","As an Admin, I want to initiate the permanent deletion of my organization's tenant through a secure, multi-step process, so that I can ensure all our data is erased from the service when we decide to stop using it.","Provides a self-service offboarding capability and ensures compliance with data privacy regulations (e.g., GDPR's 'right to erasure').","Should Have","8","[""US-023"",""US-024"",""US-025""]","[{""scenario"":""Admin successfully initiates tenant deletion"",""given"":""an Admin is on the 'Tenant Settings' page"",""when"":""the Admin clicks 'Delete Organization', confirms their intent, and successfully re-authenticates"",""then"":""the tenant's status is updated to 'pending_deletion', a 'scheduledDeletionTimestamp' is set for 30 days in the future, and an audit log entry is created.""},{""scenario"":""Admin fails re-authentication"",""given"":""an Admin has initiated tenant deletion and is prompted to re-authenticate"",""when"":""the Admin enters an incorrect password"",""then"":""the system displays an 'Invalid password' error, and the deletion process is aborted.""}]","[""WI-026-TUL-DEL-UI"",""WI-027-TUL-DEL-FUNC"",""WI-028-TUL-CANCEL-FUNC"",""WI-029-TUL-PURGE-FUNC""]","[""Deletion UI flow is implemented in the Admin dashboard."",""Backend function handles re-authentication and sets the tenant to 'pending_deletion' status."",""A 30-day grace period is clearly communicated to the Admin."",""A scheduled function is in place to perform the final data purge.""]"
"US-017","Authentication, Authorization & Security","User logs in with email and password","Registered User","As a registered user, I want to securely log in to the application using my email and password, so that I can access my personalized dashboard and perform actions specific to my role.","Provides the fundamental security mechanism to authenticate users and grant them role-based access to tenant-specific data.","Must Have","3","[""US-006"",""US-021""]","[{""scenario"":""Successful login with valid credentials"",""given"":""a registered user with an 'active' status is on the login screen"",""when"":""the user enters their correct email and password"",""then"":""the user is authenticated and redirected to their role-specific dashboard.""},{""scenario"":""Login attempt with an incorrect password"",""given"":""a registered user is on the login screen"",""when"":""the user enters an incorrect password"",""then"":""a generic error message 'Invalid email or password' is displayed.""},{""scenario"":""Login attempt by a deactivated user"",""given"":""a user's account status is 'deactivated'"",""when"":""the user enters their correct credentials"",""then"":""a specific error message 'Your account has been deactivated' is displayed, and access is denied.""}]","[""WI-030-AAS-LOGIN-UI""]","[""Login screen is implemented for mobile and web."",""Authentication against Firebase Auth is functional."",""Error states for invalid credentials and deactivated users are handled correctly."",""Successful login redirects to the correct role-based view.""]"
"US-021","Authentication, Authorization & Security","User sees a role-specific dashboard after logging in","Authenticated User","As an authenticated user, I want to be automatically routed to my role-specific dashboard immediately after a successful login, so that I can efficiently access the tools and information relevant to my responsibilities.","Improves user efficiency by providing a personalized experience and immediately presenting relevant tools and data.","Must Have","2","[""US-017""]","[{""scenario"":""Admin logs into the web application"",""given"":""a user with the role 'Admin' authenticates on the web"",""when"":""login is successful"",""then"":""the system redirects them to the main Admin Web Dashboard.""},{""scenario"":""Supervisor logs into the mobile application"",""given"":""a user with the role 'Supervisor' authenticates on mobile"",""when"":""login is successful"",""then"":""the system navigates them to the Supervisor Mobile Dashboard (e.g., approvals list).""},{""scenario"":""Subordinate logs into the mobile application"",""given"":""a user with the role 'Subordinate' authenticates on mobile"",""when"":""login is successful"",""then"":""the system navigates them to the Subordinate Mobile Dashboard (e.g., check-in screen).""}]","[""WI-033-AAS-ROLE-ROUTE""]","[""A central auth state listener is implemented."",""The listener reads the 'role' custom claim from the auth token."",""The router correctly navigates users to one of three distinct dashboards based on their role.""]"
"US-028","Core Attendance Workflow","Subordinate checks in for attendance","Subordinate","As a Subordinate, I want to tap a 'Check-In' button so that the system captures my current time and GPS location to create an official attendance record for the start of my workday.","Provides a verifiable, time-stamped, and geo-located record of when an employee starts their workday, which is the foundational data point for all attendance tracking.","Must Have","5","[""US-017"",""US-021""]","[{""scenario"":""Successful online check-in"",""given"":""I am a logged-in Subordinate with location permissions granted"",""when"":""I tap the 'Check-In' button"",""then"":""a new attendance record is created in Firestore with my GPS coordinates, the current time, and a 'pending' status.""},{""scenario"":""Successful offline check-in"",""given"":""I am a logged-in Subordinate and my device is offline"",""when"":""I tap the 'Check-In' button"",""then"":""the attendance record is created in the local cache with an 'isOfflineEntry' flag, and the UI updates to show I am checked in.""},{""scenario"":""Attempting to check in twice"",""given"":""I have already successfully checked in for the current day"",""when"":""I view the main dashboard"",""then"":""the 'Check-In' button is disabled.""}]","[""WI-038-CAW-UI"",""WI-039-CAW-LOCATION"",""WI-040-CAW-CHECKIN"",""WI-042-CAW-STATE""]","[""Check-in button is functional on the Subordinate dashboard."",""GPS coordinates and timestamp are captured and stored."",""Offline check-ins are cached locally."",""A 'pending' attendance record is created in Firestore.""]"
"US-033","Core Attendance Workflow","Subordinate marks attendance while offline","Subordinate","As a Subordinate, I want to be able to check in and check out when my device is offline, so that my attendance is captured accurately at the correct time, regardless of my network connectivity.","Ensures data integrity and accuracy by capturing attendance at the moment it occurs. Increases system reliability and user trust.","Must Have","5","[""US-028"",""US-029""]","[{""scenario"":""User performs a check-in while offline"",""given"":""the user is logged in and the device is offline"",""when"":""the user taps the 'Check-In' button"",""then"":""the attendance record is created in the local Firestore cache with an 'isOfflineEntry' flag, and the UI updates immediately to show a 'Checked In' status.""},{""scenario"":""Data syncs upon reconnection"",""given"":""the user has one or more records stored in the local cache"",""when"":""the device regains a stable internet connection"",""then"":""the Firestore SDK automatically syncs the local records to the server, preserving the 'isOfflineEntry' flag.""}]","[""WI-040-CAW-CHECKIN"",""WI-041-CAW-CHECKOUT""]","[""Firestore offline persistence is enabled and configured."",""Check-in and check-out actions function correctly in airplane mode."",""Local data is successfully synced to the backend upon network restoration.""]"
"US-037","Approval & Correction Workflow","Supervisor views pending attendance records from subordinates","Supervisor","As a Supervisor, I want to see a clear list of all attendance records from my direct subordinates that are awaiting my review, so that I can efficiently manage my team's attendance and take timely action.","Enables the core attendance approval workflow, ensuring that employee work hours are verified in a timely manner for data integrity and accountability.","Must Have","5","[""US-028"",""US-015""]","[{""scenario"":""Supervisor views a list of pending records"",""given"":""a Supervisor has a subordinate with a 'pending' attendance record"",""when"":""the Supervisor navigates to their main dashboard"",""then"":""a list of all 'pending' attendance records from their direct subordinates is displayed.""},{""scenario"":""List only shows records from direct subordinates"",""given"":""a Supervisor is logged in"",""when"":""the system fetches attendance records for their dashboard"",""then"":""the query filters records where the `supervisorId` matches the logged-in Supervisor's `userId`.""},{""scenario"":""List updates in real-time"",""given"":""a Supervisor is viewing their dashboard"",""when"":""one of their subordinates submits a new attendance record"",""then"":""the new 'pending' record automatically appears at the top of the list without requiring a manual refresh.""}]","[""WI-049-ACW-LIST-UI""]","[""Supervisor dashboard screen is implemented."",""A real-time Firestore query fetches pending records for the supervisor's subordinates."",""The list correctly displays relevant record information."",""Firestore Security Rules enforce that a supervisor can only see their own team's data.""]"
"US-039","Approval & Correction Workflow","Supervisor approves a single attendance record","Supervisor","As a Supervisor, I want to approve a single pending attendance record for one of my subordinates, so that I can validate their work hours and move the record to an 'approved' state.","Enables the core attendance validation workflow, ensures data integrity for reporting, and provides accountability by formally confirming subordinate work hours.","Must Have","2","[""US-037""]","[{""scenario"":""Successful approval of a pending record"",""given"":""I am a Supervisor viewing a 'pending' attendance record"",""when"":""I tap the 'Approve' button for that record"",""then"":""the record's status is updated to 'approved', a success message is displayed, and the record is removed from my 'Pending Approvals' list.""},{""scenario"":""Approval action is logged"",""given"":""I am a Supervisor approving a record"",""when"":""the approval is successfully processed"",""then"":""a new document is created in the `auditLog` collection detailing the approval action.""}]","[""WI-051-ACW-SINGLE-APPROVE""]","[""Approve button is functional in the pending approvals list."",""Clicking approve updates the record's status in Firestore."",""The UI list updates automatically."",""Firestore Security Rules ensure only the correct supervisor can approve.""]"
"US-045","Approval & Correction Workflow","Subordinate requests a correction to an attendance record","Subordinate","As a Subordinate, I want to submit a request to correct the time on my attendance record and provide a mandatory reason, so that I can fix any mistakes and ensure my work hours are accurately reflected.","Ensures data integrity by providing a formal, auditable workflow for correcting attendance errors, enhancing accountability.","Must Have","5","[""US-039"",""US-051""]","[{""scenario"":""Submitting a valid correction request"",""given"":""I am viewing an 'approved' attendance record in my history"",""when"":""I select 'Request Correction', enter a new time, provide a justification, and submit"",""then"":""the record's status is updated to 'correction_pending', and the proposed changes and justification are saved to the record.""},{""scenario"":""Submitting a request with no justification"",""given"":""I am on the correction form"",""when"":""I leave the justification field blank and try to submit"",""then"":""the submission is blocked, and an error message 'Justification is required' is displayed.""}]","[""WI-054-ACW-CORRECT-UI"",""WI-055-ACW-CORRECT-DATA""]","[""Correction request UI is functional from the attendance history screen."",""Submitting the form updates the attendance record to a 'correction_pending' state."",""Firestore Security Rules ensure a user can only request corrections for their own records.""]"
"US-011","Team & Hierarchy Management","Admin creates a new team and assigns a Supervisor","Admin","As an Admin, I want to create a new team by providing a name and selecting an existing user as its Supervisor, so that I can accurately model my organization's structure.","Enables the foundational hierarchical structure of the organization, which is a prerequisite for managing user groups and implementing role-based approval workflows.","Must Have","5","[""US-004""]","[{""scenario"":""Successful creation of a new team"",""given"":""I am an Admin on the 'Team Management' page"",""when"":""I enter a unique team name, select a valid Supervisor, and click 'Save'"",""then"":""a new team document is created in Firestore with the specified name and `supervisorId`.""},{""scenario"":""Attempt to create a team with a duplicate name"",""given"":""a team named 'Field Operations' already exists"",""when"":""I enter 'Field Operations' as the new team name and attempt to save"",""then"":""the creation is blocked, and an error 'Team name must be unique' is displayed.""}]","[""WI-061-THM-CREATE-UI"",""WI-062-THM-CRUD-FUNC""]","[""Team creation UI is functional in the Admin dashboard."",""Backend logic/rules enforce unique team names."",""A new team document is created in Firestore upon successful submission.""]"
"US-014","Team & Hierarchy Management","Admin adds or removes members from any team","Admin","As an Admin, I want to add and remove users from any team within my organization, so that I can maintain accurate team rosters.","Ensures data integrity of the organizational structure, which is foundational for correct reporting and approval workflows.","Must Have","5","[""US-011""]","[{""scenario"":""Admin successfully adds a user to a team"",""given"":""I am an Admin viewing the 'Manage Members' page for a team"",""when"":""I select a valid user who is not already a member and confirm"",""then"":""the user's name appears in the team's member list, and the data for both the team and user is updated.""},{""scenario"":""Admin successfully removes a user from a team"",""given"":""I am an Admin viewing the member list for a team"",""when"":""I click 'Remove' next to a member's name and confirm"",""then"":""the user's name is removed from the list, and the data for both team and user is updated.""}]","[""WI-061-THM-CREATE-UI"",""WI-062-THM-CRUD-FUNC""]","[""Team membership management UI is functional in the Admin dashboard."",""Adding a member updates both the team and user documents atomically."",""Removing a member updates both the team and user documents atomically."",""Firestore Security Rules restrict this action to Admins.""]"
"US-052","Event Management","Supervisor creates a new event","Supervisor","As a Supervisor, I want to create a new event with a title, description, start time, and end time, so that I can formally schedule and communicate activities to my team members.","Enables formal scheduling of team activities, improving coordination and providing context for attendance records.","Should Have","3","[""US-021""]","[{""scenario"":""Supervisor successfully creates a single, non-recurring event"",""given"":""I am a Supervisor on the 'Create Event' screen"",""when"":""I enter a valid title, start time, and an end time that is after the start time, and tap 'Save'"",""then"":""a new event document is created in Firestore with the provided details.""},{""scenario"":""Attempting to save with end time before start time"",""given"":""I am a Supervisor on the 'Create Event' screen"",""when"":""I select an 'End Time' that is earlier than the 'Start Time'"",""then"":""a validation error 'End time must be after start time' is displayed, and the event is not saved.""}]","[""WI-067-EM-CREATE-UI""]","[""Event creation form is implemented in the Supervisor's mobile UI."",""A new event document is successfully created in Firestore on valid submission."",""Firestore Security Rules ensure only Supervisors or Admins can create events.""]"
"US-059","Admin Dashboard & Reporting","Admin views summary attendance reports on the web dashboard","Admin","As an Admin, I want to view aggregated summary reports of attendance for daily, weekly, and monthly periods, so that I can quickly assess workforce attendance trends and monitor overall presence.","Provides immediate, actionable insights into workforce attendance, enabling efficient monitoring and trend analysis.","Should Have","8","[""US-028"",""US-069""]","[{""scenario"":""Viewing a daily summary report"",""given"":""I am viewing the reports page"",""when"":""I select the 'Daily Summary' view for a specific date"",""then"":""the dashboard shows the total number of active users, the number of users who checked in, the number of absent users, and the attendance percentage for that date.""},{""scenario"":""Viewing a weekly summary report"",""given"":""I am viewing the reports page"",""when"":""I select the 'Weekly Summary' view"",""then"":""the dashboard displays the average daily attendance percentage and a trend chart visualizing daily attendance for that week.""}]","[""WI-075-ADR-SUMMARY-UI"",""WI-076-ADR-AGGREGATE-FUNC""]","[""A daily scheduled Cloud Function pre-aggregates attendance data into a `dailySummaries` collection."",""The Admin dashboard UI fetches data from the `dailySummaries` collection to display reports."",""Daily, Weekly, and Monthly views are implemented with data cards and charts.""]"
"US-065","Integrations","Admin configures automatic data export to Google Sheets","Admin","As an Admin, I want to configure a secure, automated, and scheduled export of approved attendance data to a Google Sheet, so that I can streamline our reporting process and perform custom analysis.","Automates data export, reducing manual effort. Enables seamless integration with external business workflows like payroll and advanced analytics.","Could Have","13","[""US-039"",""US-066""]","[{""scenario"":""Admin successfully configures a new daily export"",""given"":""I am an Admin on the 'Integrations' page"",""when"":""I complete the Google OAuth flow, provide a sheet name, select a 'Daily' schedule, and save"",""then"":""a new Google Sheet is created in my Drive, and the UI updates to show an 'Active' status.""},{""scenario"":""Scheduled export function runs successfully"",""given"":""the export is configured and there are new 'approved' attendance records"",""when"":""the scheduled Cloud Function is triggered"",""then"":""the new records are appended as rows to the linked Google Sheet, and the 'Last Sync' timestamp is updated.""}]","[""WI-086-INT-GSAUTH-UI"",""WI-087-INT-GSAUTH-FUNC"",""WI-088-INT-GSEXPORT-FUNC"",""WI-089-INT-GS-ERROR-HANDLING""]","[""OAuth 2.0 flow for Google Sheets is implemented and secure."",""A scheduled Cloud Function is created to handle the export."",""The function correctly fetches new approved records and appends them to the target sheet."",""Error handling for token revocation or deleted sheets is implemented.""]"
"US-078","Cross-Cutting Concerns & NFRs","User interacts with an accessible application compliant with WCAG 2.1 AA standards","User with a disability","As a user with a disability, I want the application to adhere to accessibility standards, including screen reader compatibility and sufficient color contrast, so that I can independently and effectively use all of its features.","Ensures the application is inclusive and usable by the widest possible audience, mitigates legal risk, and improves overall application usability.","Must Have","13","[]","[{""scenario"":""Screen Reader Compatibility"",""given"":""a user has a screen reader (VoiceOver/TalkBack) enabled"",""when"":""the user navigates to any interactive element (button, text field, toggle)"",""then"":""the screen reader clearly announces the element's name, role, and state.""},{""scenario"":""Sufficient Color Contrast"",""given"":""a user is viewing any screen"",""when"":""text or a meaningful icon is displayed against a background"",""then"":""the contrast ratio meets or exceeds WCAG 2.1 AA standards (4.5:1 for normal text).""},{""scenario"":""Adequate Touch Target Size"",""given"":""a user is interacting with any screen"",""when"":""the user attempts to tap a button or icon"",""then"":""the interactive area for the control is at least 44x44 pixels.""}]","[""WI-090-CCC-WCAG-AUDIT""]","[""An accessibility checklist based on WCAG 2.1 AA is created and applied to all screens."",""Manual testing with VoiceOver and TalkBack is completed for all core user flows."",""Automated checks for contrast and target size are integrated into the development process.""]"