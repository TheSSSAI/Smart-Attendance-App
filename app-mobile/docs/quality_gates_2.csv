"gate_name","gate_type","trigger_event","success_criteria","failure_action","responsible_team","automation_level","tools_used","measurement_frequency","escalation_procedure","historical_pass_rate","average_resolution_time","business_impact"
"On-Commit Gate","Static Analysis & Unit Test","Code commit to any feature branch","Linting passes; All unit tests pass; Code coverage does not decrease and is >= 80% (REQ-1-072).","Fail CI build; Block PR merge.","Development Team","Fully Automated","GitHub Actions, Jest, flutter_test, SonarQube","Every commit","Immediate feedback in PR.","98","0.5","Prevents basic errors and ensures code quality at the earliest stage."
"PR Merge Gate","Integration & Security Test","Pull request to 'develop' or 'main' branch","All integration tests pass; All Firestore security rule tests pass; No new high/critical vulnerabilities found by static analysis.","Block PR merge; Require fixes.","Development Team & QA","Fully Automated","GitHub Actions, Firebase Emulator Suite, Snyk/Dependabot","Every pull request","PR review comments; Tech Lead notification.","92","4","Prevents integration issues and security flaws from entering the main codebase."
"Staging Deployment Gate","E2E & UAT","Manual trigger for deployment to Production","All critical path E2E tests pass; Manual UAT sign-off from Product Owner; Performance benchmarks are met; No P0 or P1 bugs in staging.","Block production deployment; Trigger incident response for critical failures.","QA Team & Product Owner","Partially Automated","Flutter integration_test, JMeter, Manual Test Plans","Per release candidate","Go/No-Go release meeting.","99","24","Final check to ensure release readiness and prevent production issues."