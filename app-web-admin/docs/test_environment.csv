"environment_name","environment_type","deployment_frequency","data_refresh_frequency","infrastructure_stack","service_dependencies","monitoring_tools","access_control","backup_strategy","disaster_recovery","cost_optimization","maintenance_window"
"Development (Firebase Emulator)","Local","On demand","On demand (scripted seeding)","Firebase Emulator Suite (Auth, Firestore, Functions)","Local services only. External APIs are mocked.","Emulator UI; Console logs","Individual Developer","N/A","N/A","N/A (Free)","N/A"
"Staging (myapp-staging)","Shared","On merge to `develop`","Weekly (anonymized data refresh)","Dedicated Firebase Project on GCP","Live Firebase services; Sandbox external APIs (Google, SendGrid).","Google Cloud Monitoring; Firebase Crashlytics","Development, QA, and Product Teams","Daily automated backups","Documented procedure","Limited scale; budget alerts enabled","Nightly as needed"
"Production (myapp-prod)","Live","Bi-weekly (on merge to `main`)","N/A","Dedicated, auto-scaling Firebase Project on GCP","Live external APIs","Google Cloud Monitoring (with alerts); Firebase Crashlytics","DevOps / On-call Engineers only","Daily automated backups to separate GCS bucket","4-hour RTO, 24-hour RPO plan in place and tested quarterly.","Auto-scaling; budget alerts; cost monitoring","Announced via user notifications"
"Performance","Isolated","On demand","Per test run (scripted large-scale data seeding)","Isolated, production-scale Firebase Project on GCP","Live Firebase services; mocked external APIs.","JMeter; Google Cloud Monitoring","QA / Performance Engineers","N/A","N/A","Ephemeral (created for tests, destroyed after)","N/A"