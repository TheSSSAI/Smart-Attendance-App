"task_id","title","description","type","status","priority","assignee","reporter","due_date","estimated_hours","story_points","labels","sprint","sprint_goal","epic","epic_id","project","parent_id","dependencies","skills_required","complexity","risk_level","acceptance_criteria","definition_of_done","created_at","updated_at","sprint_start_date","sprint_end_date","capacity_allocation","collaboration_required","external_dependencies","testing_requirements","deployment_notes","business_value"
"T013.1","Setup package.json with metadata, dependencies, and scripts","Initialize and populate the package.json file. Define the package name '@attendance-app/core-domain-models', version, and add 'zod' to dependencies. Add 'typescript', 'jest', 'ts-jest', 'eslint', and 'prettier' to devDependencies. Define 'build', 'lint', and 'test' scripts.","Task","Sprint Backlog","Critical","dev.typescript@attendance-app.com","tech.lead@attendance-app.com","2024-08-06","2","1","configuration,npm,setup","Sprint 1","Establish the project scaffolding, tooling, and foundational shared schemas.","Project Scaffolding and Configuration","EPIC-002","core-domain-models","WI-013","","npm,JSON","Low","Low","The package.json file is created with all required metadata. `npm install` runs successfully. Scripts are executable.","package.json and package-lock.json are committed and pass code review.","2024-07-29T10:00:00Z","2024-07-29T10:00:00Z","2024-08-05","2024-08-16","100%","","","Run `npm install` and `npm run build` to verify configuration.","This is a foundational step for all other tasks.","Establishes the library's identity and build process."
"T014.1","Implement and validate tsconfig.json","Create the 'tsconfig.json' file with strict compiler options (`strict: true`, `module: NodeNext`, `declaration: true`) to ensure type safety and correct build outputs.","Task","Sprint Backlog","Critical","dev.typescript@attendance-app.com","tech.lead@attendance-app.com","2024-08-07","2","1","configuration,typescript,setup","Sprint 1","Establish the project scaffolding, tooling, and foundational shared schemas.","Project Scaffolding and Configuration","EPIC-002","core-domain-models","WI-014","T013.1","TypeScript","Low","Low","The `tsconfig.json` file is created. Running `npm run build` successfully compiles JS and `.d.ts` files to the `dist` directory.","tsconfig.json is committed and a sample build is successful.","2024-07-29T10:00:00Z","2024-07-29T10:00:00Z","2024-08-05","2024-08-16","100%","","","Successful execution of `npm run build` with a placeholder `index.ts`.","","Enforces code quality and type safety at the compiler level."
"T015.1","Implement code quality and formatting configurations","Create and configure `.eslintrc.json`, `.prettierrc`, `.editorconfig`, and `.gitignore` to enforce consistent code style and quality.","Task","Sprint Backlog","High","dev.typescript@attendance-app.com","tech.lead@attendance-app.com","2024-08-07","2.7","2","configuration,linting,quality","Sprint 1","Establish the project scaffolding, tooling, and foundational shared schemas.","Project Scaffolding and Configuration","EPIC-002","core-domain-models","WI-015","T013.1","ESLint,Prettier","Low","Low","All configuration files are created. `npm run lint` successfully runs and identifies issues.","All config files are committed and pass code review.","2024-07-29T10:00:00Z","2024-07-29T10:00:00Z","2024-08-05","2024-08-16","100%","","","Successful execution of `npm run lint`.","","Automates code quality and maintainability."
"T016.1","Implement and validate jest.config.js","Create the 'jest.config.js' file and configure it to use the 'ts-jest' preset for running tests on the TypeScript codebase.","Task","Sprint Backlog","Critical","dev.typescript@attendance-app.com","tech.lead@attendance-app.com","2024-08-08","1.5","1","configuration,testing,setup","Sprint 1","Establish the project scaffolding, tooling, and foundational shared schemas.","Project Scaffolding and Configuration","EPIC-002","core-domain-models","WI-016","T013.1","Jest,TypeScript","Low","Low","The `jest.config.js` file is created. Running `npm test` with a placeholder test file executes Jest successfully.","jest.config.js is committed and `npm test` runs without errors.","2024-07-29T10:00:00Z","2024-07-29T10:00:00Z","2024-08-05","2024-08-16","100%","","","Successful execution of `npm test`.","","Enables automated unit testing for the library."
"T001.1","Implement primitive schemas for IDs and Timestamps","Create `src/domains/shared/primitives.schema.ts`. Implement `idSchema` as `z.string().uuid()`, `tenantIdSchema`, and `firestoreTimestampSchema`.","Task","Sprint Backlog","Critical","dev.typescript@attendance-app.com","tech.lead@attendance-app.com","2024-08-09","2","1","schema,zod,backend","Sprint 1","Establish the project scaffolding, tooling, and foundational shared schemas.","Core Domain Model Implementation","EPIC-001","core-domain-models","WI-001","T014.1","TypeScript,Zod","Low","Low","Schema file is created and all schemas are exported. Schemas correctly validate their intended types.","File is committed and passes code review.","2024-07-29T10:00:00Z","2024-07-29T10:00:00Z","2024-08-05","2024-08-16","100%","","","Unit tests in task T001.2 must pass.","","Establishes a foundational layer of data validation."
"T001.2","Develop unit tests for primitive schemas","Create `primitives.schema.spec.ts`. Write Jest tests for all primitive schemas to verify success and failure cases.","Task","Sprint Backlog","Critical","dev.typescript@attendance-app.com","tech.lead@attendance-app.com","2024-08-12","2.5","2","testing,jest,zod","Sprint 1","Establish the project scaffolding, tooling, and foundational shared schemas.","Core Domain Model Implementation","EPIC-001","core-domain-models","WI-001","T001.1,T016.1","Jest,TypeScript,Zod","Low","Low","Tests cover valid UUIDs, invalid strings, valid timestamps, and invalid timestamps. Coverage is >95%.","Test file is committed and all tests pass in CI.","2024-07-29T10:00:00Z","2024-07-29T10:00:00Z","2024-08-05","2024-08-16","100%","","","Successful execution of `npm test`.","","Ensures the reliability of foundational data contracts."
"T002.1","Implement geoPoint schema and type","Create `src/domains/shared/geo.schema.ts`. Implement `geoPointSchema` with constraints for latitude and longitude. Infer and export the `GeoPoint` type.","Task","Sprint Backlog","Critical","dev.typescript@attendance-app.com","tech.lead@attendance-app.com","2024-08-13","2","1","schema,zod,backend","Sprint 1","Establish the project scaffolding, tooling, and foundational shared schemas.","Core Domain Model Implementation","EPIC-001","core-domain-models","WI-002","T014.1","TypeScript,Zod","Low","Low","The file is created and exports `geoPointSchema` and `GeoPoint`. Schema defines correct min/max constraints.","File is committed and passes code review.","2024-07-29T10:00:00Z","2024-07-29T10:00:00Z","2024-08-05","2024-08-16","100%","","","Unit tests in task T002.2 must pass.","","Provides a validated contract for geographic data."
"T002.2","Develop unit tests for geoPoint schema","Create `geo.schema.spec.ts`. Write Jest tests for `geoPointSchema` to validate success, failure, and boundary values.","Task","Sprint Backlog","Critical","dev.typescript@attendance-app.com","tech.lead@attendance-app.com","2024-08-14","2.5","2","testing,jest,zod","Sprint 1","Establish the project scaffolding, tooling, and foundational shared schemas.","Core Domain Model Implementation","EPIC-001","core-domain-models","WI-002","T002.1,T016.1","Jest,TypeScript,Zod","Low","Low","Tests cover valid coordinates, out-of-range coordinates, and boundary values. Coverage is >95%.","Test file is committed and all tests pass in CI.","2024-07-29T10:00:00Z","2024-07-29T10:00:00Z","2024-08-05","2024-08-16","100%","","","Successful execution of `npm test`.","","Ensures the reliability of geographic data contracts."
"T003.1","Implement Tenant schemas and types","Create `src/domains/tenant/tenant.schema.ts`. Implement `tenantStatusSchema` and `tenantSchema` with all required fields, importing primitives.","Task","Sprint Backlog","Critical","dev.typescript@attendance-app.com","tech.lead@attendance-app.com","2024-08-20","2.5","2","schema,zod,backend,tenant","Sprint 2","Implement core entity schemas for User, Tenant, Team, Event, and AuditLog.","Core Domain Model Implementation","EPIC-001","core-domain-models","WI-003","T001.1","TypeScript,Zod","Low","Low","`tenantStatusSchema` and `tenantSchema` are created and exported. `Tenant` type is inferred and exported.","File is committed and passes code review.","2024-07-29T10:00:00Z","2024-07-29T10:00:00Z","2024-08-19","2024-08-30","100%","","","Unit tests in task T003.2 must pass.","","Defines the fundamental data contract for a Tenant."
"T003.2","Develop unit tests for Tenant schema","Create `tenant.schema.spec.ts`. Write tests for `tenantStatusSchema` and `tenantSchema`, covering valid data and missing required fields.","Task","Sprint Backlog","Critical","dev.typescript@attendance-app.com","tech.lead@attendance-app.com","2024-08-21","2.7","2","testing,jest,zod,tenant","Sprint 2","Implement core entity schemas for User, Tenant, Team, Event, and AuditLog.","Core Domain Model Implementation","EPIC-001","core-domain-models","WI-003","T003.1,T016.1","Jest,TypeScript,Zod","Low","Low","Tests for schemas pass for all valid and invalid values. Coverage is >95%.","Test file is committed and all tests pass in CI.","2024-07-29T10:00:00Z","2024-07-29T10:00:00Z","2024-08-19","2024-08-30","100%","","","Successful execution of `npm test`.","","Ensures the reliability of the Tenant data contract."
"T006.1","Implement User schemas and types","Create `src/domains/user/user.schema.ts`. Implement `userRoleSchema`, `userStatusSchema`, and `userSchema` with all fields and validations.","Task","Sprint Backlog","Critical","dev.typescript@attendance-app.com","tech.lead@attendance-app.com","2024-08-22","3.2","2","schema,zod,backend,user","Sprint 2","Implement core entity schemas for User, Tenant, Team, Event, and AuditLog.","Core Domain Model Implementation","EPIC-001","core-domain-models","WI-006","T001.1","TypeScript,Zod","Medium","Medium","All user schemas and types are created and exported. Schema correctly validates email format and arrays of UUIDs.","File is committed and passes code review.","2024-07-29T10:00:00Z","2024-07-29T10:00:00Z","2024-08-19","2024-08-30","100%","","","Unit tests in task T006.2 must pass.","","Provides the definitive data contract for the User entity."
"T006.2","Develop unit tests for User schema","Create `user.schema.spec.ts`. Write Jest tests for all user schemas, validating enums, email format, optional fields, and array types.","Task","Sprint Backlog","Critical","dev.typescript@attendance-app.com","tech.lead@attendance-app.com","2024-08-23","4.1","3","testing,jest,zod,user","Sprint 2","Implement core entity schemas for User, Tenant, Team, Event, and AuditLog.","Core Domain Model Implementation","EPIC-001","core-domain-models","WI-006","T006.1,T016.1","Jest,TypeScript,Zod","Medium","Low","Tests cover all enums, email formats, optional `supervisorId`, and array of `teamIds`. Coverage is >95%.","Test file is committed and all tests pass in CI.","2024-07-29T10:00:00Z","2024-07-29T10:00:00Z","2024-08-19","2024-08-30","100%","","","Successful execution of `npm test`.","","Ensures the reliability of the User data contract."
"T007.1","Implement Team schema and type","Create `src/domains/team/team.schema.ts`. Implement `teamSchema` with all required fields. Infer and export `Team` type.","Task","Sprint Backlog","High","dev.typescript@attendance-app.com","tech.lead@attendance-app.com","2024-08-26","2.5","2","schema,zod,backend,team","Sprint 2","Implement core entity schemas for User, Tenant, Team, Event, and AuditLog.","Core Domain Model Implementation","EPIC-001","core-domain-models","WI-007","T001.1","TypeScript,Zod","Low","Low","`teamSchema` and `Team` type are created and exported. Schema validates all fields, including `memberIds` array.","File is committed and passes code review.","2024-07-29T10:00:00Z","2024-07-29T10:00:00Z","2024-08-19","2024-08-30","100%","","","Unit tests in task T007.2 must pass.","","Defines the data contract for Team structures."
"T007.2","Develop unit tests for Team schema","Create `team.schema.spec.ts`. Write Jest tests for `teamSchema`, validating all fields and array types.","Task","Sprint Backlog","High","dev.typescript@attendance-app.com","tech.lead@attendance-app.com","2024-08-27","2.7","2","testing,jest,zod,team","Sprint 2","Implement core entity schemas for User, Tenant, Team, Event, and AuditLog.","Core Domain Model Implementation","EPIC-001","core-domain-models","WI-007","T007.1,T016.1","Jest,TypeScript,Zod","Low","Low","Tests for valid team objects pass. Tests fail for missing fields or invalid `memberIds`. Coverage is >95%.","Test file is committed and all tests pass in CI.","2024-07-29T10:00:00Z","2024-07-29T10:00:00Z","2024-08-19","2024-08-30","100%","","","Successful execution of `npm test`.","","Ensures the reliability of the Team data contract."
"T009.1","Implement Event schema and type","Create `src/domains/event/event.schema.ts`. Implement `eventSchema` with all required fields. Infer and export `Event` type.","Task","Sprint Backlog","High","dev.typescript@attendance-app.com","tech.lead@attendance-app.com","2024-08-28","2.5","2","schema,zod,backend,event","Sprint 2","Implement core entity schemas for User, Tenant, Team, Event, and AuditLog.","Core Domain Model Implementation","EPIC-001","core-domain-models","WI-009","T001.1","TypeScript,Zod","Low","Low","`eventSchema` and `Event` type are created and exported. Schema validates all fields, including ID arrays.","File is committed and passes code review.","2024-07-29T10:00:00Z","2024-07-29T10:00:00Z","2024-08-19","2024-08-30","100%","","","Unit tests in task T009.2 must pass.","","Defines the data contract for Events."
"T009.2","Develop unit tests for Event schema","Create `event.schema.spec.ts`. Write Jest tests for `eventSchema`, validating all fields and array types.","Task","Sprint Backlog","High","dev.typescript@attendance-app.com","tech.lead@attendance-app.com","2024-08-29","2.7","2","testing,jest,zod,event","Sprint 2","Implement core entity schemas for User, Tenant, Team, Event, and AuditLog.","Core Domain Model Implementation","EPIC-001","core-domain-models","WI-009","T009.1,T016.1","Jest,TypeScript,Zod","Low","Low","Tests for a valid event object pass. Tests fail for missing fields or invalid ID arrays. Coverage is >95%.","Test file is committed and all tests pass in CI.","2024-07-29T10:00:00Z","2024-07-29T10:00:00Z","2024-08-19","2024-08-30","100%","","","Successful execution of `npm test`.","","Ensures the reliability of the Event data contract."
"T010.1","Implement AuditLog schema and type","Create `src/domains/audit/audit-log.schema.ts`. Implement `auditLogSchema` with a flexible `details` object. Infer and export `AuditLog` type.","Task","Sprint Backlog","High","dev.typescript@attendance-app.com","tech.lead@attendance-app.com","2024-08-29","2.5","2","schema,zod,backend,audit","Sprint 2","Implement core entity schemas for User, Tenant, Team, Event, and AuditLog.","Core Domain Model Implementation","EPIC-001","core-domain-models","WI-010","T001.1","TypeScript,Zod","Low","Low","`auditLogSchema` and `AuditLog` type are created and exported. Schema accepts an arbitrary object for the `details` field.","File is committed and passes code review.","2024-07-29T10:00:00Z","2024-07-29T10:00:00Z","2024-08-19","2024-08-30","100%","","","Unit tests in task T010.2 must pass.","","Establishes the data contract for compliance and accountability."
"T010.2","Develop unit tests for AuditLog schema","Create `audit-log.schema.spec.ts`. Write Jest tests for `auditLogSchema`, validating core fields and the flexible `details` object.","Task","Sprint Backlog","High","dev.typescript@attendance-app.com","tech.lead@attendance-app.com","2024-08-30","2.7","2","testing,jest,zod,audit","Sprint 2","Implement core entity schemas for User, Tenant, Team, Event, and AuditLog.","Core Domain Model Implementation","EPIC-001","core-domain-models","WI-010","T010.1,T016.1","Jest,TypeScript,Zod","Low","Low","Tests for a valid audit log object pass. `details` field accepts different object shapes. Coverage is >95%.","Test file is committed and all tests pass in CI.","2024-07-29T10:00:00Z","2024-07-29T10:00:00Z","2024-08-19","2024-08-30","100%","","","Successful execution of `npm test`.","","Ensures the reliability of the AuditLog data contract."
"T008.1","Implement AttendanceRecord schema and types","Create `src/domains/attendance/attendance-record.schema.ts`. Implement `attendanceStatusSchema`, `attendanceFlagSchema`, and the main `attendanceRecordSchema` including the nested optional `correction` object.","Task","Sprint Backlog","Critical","dev.typescript@attendance-app.com","tech.lead@attendance-app.com","2024-09-05","5.2","5","schema,zod,backend,attendance","Sprint 3","Implement the high-complexity AttendanceRecord schema and finalize the library's public API.","Core Domain Model Implementation","EPIC-001","core-domain-models","WI-008","T001.1,T002.1","TypeScript,Zod","High","Medium","All schemas and types are exported. The main schema validates complex records, with and without the optional `correction` object.","File is committed and passes code review.","2024-07-29T10:00:00Z","2024-07-29T10:00:00Z","2024-09-02","2024-09-13","100%","","","Unit tests in task T008.2 must pass.","This is the most complex schema and is critical for the core app functionality.","Provides the definitive data contract for the application's primary feature."
"T008.2","Develop comprehensive unit tests for AttendanceRecord schema","Create `attendance-record.schema.spec.ts`. Write extensive Jest tests validating all enums, flags, optional fields, and properties of the nested `correction` object.","Task","Sprint Backlog","Critical","dev.typescript@attendance-app.com","tech.lead@attendance-app.com","2024-09-09","6.3","5","testing,jest,zod,attendance","Sprint 3","Implement the high-complexity AttendanceRecord schema and finalize the library's public API.","Core Domain Model Implementation","EPIC-001","core-domain-models","WI-008","T008.1,T016.1","Jest,TypeScript,Zod","High","Medium","Tests cover all possible states (check-in only, completed, with correction, without correction). Test coverage is >95%.","Test file is committed and all tests pass in CI.","2024-07-29T10:00:00Z","2024-07-29T10:00:00Z","2024-09-02","2024-09-13","100%","","","Successful execution of `npm test`.","","Ensures the reliability of the most critical data contract in the system."
"T011.1","Implement and maintain domain barrel files","Create an `index.ts` file in each domain directory (`shared`, `tenant`, `user`, etc.) to re-export all public members from that domain.","Task","Sprint Backlog","Medium","dev.typescript@attendance-app.com","tech.lead@attendance-app.com","2024-09-12","2","1","configuration,typescript,api","Sprint 3","Implement the high-complexity AttendanceRecord schema and finalize the library's public API.","Core Domain Model Implementation","EPIC-001","core-domain-models","WI-011","T003.1,T006.1,T007.1,T008.1,T009.1,T010.1","TypeScript","Low","Low","A barrel file exists in each domain folder and correctly exports all public schemas and types from its domain.","All barrel files are committed and the project builds successfully.","2024-07-29T10:00:00Z","2024-07-29T10:00:00Z","2024-09-02","2024-09-13","100%","","","Code review and successful build.","","Improves the developer experience by creating a clean, modular API surface."
"T012.1","Implement and maintain root barrel file","Create the main `src/index.ts` file to re-export all public members from every domain, providing a single entry point for the library.","Task","Sprint Backlog","Medium","dev.typescript@attendance-app.com","tech.lead@attendance-app.com","2024-09-13","1","1","configuration,typescript,api","Sprint 3","Implement the high-complexity AttendanceRecord schema and finalize the library's public API.","Core Domain Model Implementation","EPIC-001","core-domain-models","WI-012","T011.1","TypeScript","Low","Low","The root `index.ts` file is created and re-exports all members from all domain barrel files.","File is committed and the project builds successfully.","2024-07-29T10:00:00Z","2024-07-29T10:00:00Z","2024-09-02","2024-09-13","100%","","","Code review and successful build.","","Defines the final, clean public API for the NPM package."