"gate_name","gate_type","trigger_event","success_criteria","failure_action","responsible_team","automation_level","tools_used","measurement_frequency","escalation_procedure","historical_pass_rate","average_resolution_time","business_impact"
"Pull Request Validation Gate","Code Quality","Pull Request creation/update","1. All lint checks must pass. 2. All unit tests must pass. 3. Code coverage for changed files must be >= 95%. 4. Forbidden dependency check must pass.","Block merge to main branch. Report failure status on the PR.","Development Team","Fully Automated","GitHub Actions, ESLint, Jest","Every commit to a PR","Developer is responsible for fixing their PR. Tech Lead assists if needed.","98","0.5","Prevents defects, architectural violations, and untested code from entering the main branch."
"Release Version Gate","Versioning","Merge to main branch with release intent","1. All PR Validation Gate checks pass. 2. Commit messages follow Conventional Commits standard to allow for automated semantic versioning. 3. A human review confirms the version bump (Major, Minor, Patch) is appropriate for the changes.","Block NPM package publication.","Tech Lead / DevOps","Partially Automated","GitHub Actions, semantic-release","On every release trigger","Tech Lead manually corrects the version or commit messages.","95","1","Prevents accidental breaking changes from being released, ensuring stability for all downstream services."