"gate_name","gate_type","trigger_event","success_criteria","failure_action","responsible_team","automation_level","tools_used","measurement_frequency","escalation_procedure","historical_pass_rate","average_resolution_time","business_impact"
"PR Quality Gate","Static Analysis & Unit Test","Pull Request Creation/Update","Linting passes; All unit tests pass; Code coverage does not decrease and is >80%; No new critical SonarQube issues.","Block merge; Fail GitHub Actions check.","Development Team","Fully Automated","GitHub Actions, Jest, Flutter Test, SonarQube.","Every commit to a PR.","PR author must fix issues before merge.","90","0.5","Prevents broken code and quality degradation from entering the main branches."
"Staging Deployment Gate","Integration & E2E Smoke Test","Merge to `develop` branch","Deployment to Staging succeeds; All automated integration tests pass; Critical path E2E smoke suite passes (Registration, Login, Check-in).","Rollback deployment; Create P1 bug; Alert DevOps and QA Lead.","DevOps / QA Team","Fully Automated","GitHub Actions, Firebase CLI, Flutter `integration_test`.","After every merge to `develop`.","War room to diagnose failure; Hotfix required before proceeding.","85","4","Ensures the staging environment is always stable for manual QA and demos."
"Release Candidate Gate","Full Regression & Sign-off","Manual trigger before production release","Full automated regression suite passes; Manual QA sign-off (no outstanding P1/P2 bugs); Performance benchmarks met; Accessibility audit passed.","Block production release; Triage and fix blocking bugs.","QA Lead / Product Owner","Partially Automated","TestRail, Automated Test Runners, Manual review.","Once per release cycle.","Go/No-Go meeting with all stakeholders.","95","24","Prevents critical defects from reaching end-users."