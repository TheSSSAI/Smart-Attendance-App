# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Deploy Firebase Infrastructure

on:
  push:
    branches:
      - main
      - staging
      - develop
  pull_request:
    branches:
      - main
      - staging
      - develop

permissions:
  contents: read
  id-token: write # Required for Workload Identity Federation

jobs:
  test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Run Firestore Rules Tests
        run: npm test

  deploy_develop:
    name: Deploy to Development
    needs: test
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    environment:
      name: Development
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Authenticate to Google Cloud (Development)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER_DEV }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL_DEV }}

      - name: Deploy to Firebase (Development)
        run: npx firebase-cli deploy --only firestore,storage --project default --force
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }} # Or use GCP Auth from previous step if configured

  deploy_staging:
    name: Deploy to Staging
    needs: test
    if: github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest
    environment:
      name: Staging
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Authenticate to Google Cloud (Staging)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER_STAGING }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL_STAGING }}

      - name: Deploy to Firebase (Staging)
        run: npx firebase-cli deploy --only firestore,storage --project staging --force
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }} # Or use GCP Auth from previous step if configured

  deploy_production:
    name: Deploy to Production
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment:
      name: Production
    concurrency:
      group: 'production'
      cancel-in-progress: false
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Authenticate to Google Cloud (Production)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER_PROD }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL_PROD }}

      - name: Deploy to Firebase (Production)
        run: npx firebase-cli deploy --only firestore,storage --project production --force
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }} # Or use GCP Auth from previous step if configured